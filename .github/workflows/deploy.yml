name: Deployment of the Game

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: glitch-dimension

jobs:
  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          if [ -d "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          else
            echo "Export templates not found at expected location"
            ls -la /root/.local/share/godot/export_templates/ || echo "Templates directory not found"
          fi
      
      - name: Verify Export Presets
        run: |
          echo "Checking export_presets.cfg..."
          cat export_presets.cfg | head -20
      
      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html 2>&1
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 14
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Validate Vercel Secrets
        if: github.event_name == 'push'
        run: |
          [ -n "${{ secrets.VERCEL_TOKEN }}" ] || { echo "Missing secret: VERCEL_TOKEN"; exit 1; }
          [ -n "${{ secrets.VERCEL_ORG_ID }}" ] || { echo "Missing secret: VERCEL_ORG_ID"; exit 1; }
          [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ] || { echo "Missing secret: VERCEL_PROJECT_ID"; exit 1; }

      - name: Link Vercel Project
        if: github.event_name == 'push'
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Copy Vercel Config
        if: github.event_name == 'push'
        run: |
          cp -v vercel.json build/web/

      - name: Deploy to Vercel
        if: github.event_name == 'push'
        run: |
          vercel deploy build/web --yes --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  export-macos:
    name: macOS Export
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          if [ -d "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          else
            echo "Export templates not found at expected location"
            ls -la /root/.local/share/godot/export_templates/ || echo "Templates directory not found"
          fi

      - name: Verify Export Presets
        run: |
          echo "Checking macOS preset..."
          rg -n "\[preset.*macOS\]|platform=\"macOS\"|export_path=" export_presets.cfg || true

      - name: macOS Build
        run: |
          mkdir -v -p build/macos
          godot --headless --verbose --export-release "macOS" build/macos/${EXPORT_NAME}.zip 2>&1

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/${{ env.EXPORT_NAME }}.zip
          retention-days: 14

      - name: Publish GitHub Release (tagged builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/macos/${{ env.EXPORT_NAME }}.zip

  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          if [ -d "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          else
            echo "Export templates not found at expected location"
            ls -la /root/.local/share/godot/export_templates/ || echo "Templates directory not found"
          fi

      - name: Verify Export Presets
        run: |
          echo "Checking Windows preset..."
          rg -n "\[preset.*Windows Desktop\]|platform=\"Windows Desktop\"|export_path=" export_presets.cfg || true

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" build/windows/${EXPORT_NAME}.exe 2>&1

      - name: Package Windows Zip
        run: |
          apt-get update && apt-get install -y zip
          zip -j build/windows/${EXPORT_NAME}-windows.zip build/windows/*

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/${{ env.EXPORT_NAME }}-windows.zip
          retention-days: 14

      - name: Publish GitHub Release (tagged builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/windows/${{ env.EXPORT_NAME }}-windows.zip

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          if [ -d "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          else
            echo "Export templates not found at expected location"
            ls -la /root/.local/share/godot/export_templates/ || echo "Templates directory not found"
          fi

      - name: Verify Export Presets
        run: |
          echo "Checking Linux preset..."
          rg -n "\[preset.*Linux\]|platform=\"Linux\"|export_path=" export_presets.cfg || true

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Linux/X11" build/linux/${EXPORT_NAME}.x86_64 2>&1

      - name: Package Linux Zip
        run: |
          apt-get update && apt-get install -y zip
          zip -j build/linux/${EXPORT_NAME}-linux.zip build/linux/*

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/${{ env.EXPORT_NAME }}-linux.zip
          retention-days: 14

      - name: Publish GitHub Release (tagged builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/linux/${{ env.EXPORT_NAME }}-linux.zip
