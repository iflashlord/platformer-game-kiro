[gd_scene load_steps=2 format=3 uid="uid://c331p7ylu3rt3"]

[sub_resource type="GDScript" id="GDScript_w5xwq"]
script/source = "extends CanvasLayer

# Button references - will be found dynamically in _ready()
var playertest_button: Button
var tutorial_button: Button
var level01_button: Button
var back_button: Button
var reset_button: Button

func _ready():
	print(\"🗺️ LevelMap _ready() called\")
	
	# Find all button references dynamically
	print(\"🔍 Finding UI elements...\")
	
	playertest_button = get_node_or_null(\"ScrollContainer/MapContainer/PlayerTestContainer/PlayerTestButton\")
	var portaltest_button = get_node_or_null(\"ScrollContainer/MapContainer/PortalTestContainer/PortalTestButton\")
	tutorial_button = get_node_or_null(\"ScrollContainer/MapContainer/TutorialContainer/TutorialButton\")
	level01_button = get_node_or_null(\"ScrollContainer/MapContainer/Level01Container/Level01Button\")
	var level01simple_button = get_node_or_null(\"ScrollContainer/MapContainer/Level01SimpleContainer/Level01SimpleButton\")
	var level01test_button = get_node_or_null(\"ScrollContainer/MapContainer/Level01TestContainer/Level01TestButton\")
	back_button = get_node_or_null(\"ScrollContainer/MapContainer/ButtonContainer/BackButton\")
	reset_button = get_node_or_null(\"ScrollContainer/MapContainer/ButtonContainer/ResetButton\")
	
	# Debug: Check if all buttons are found
	print(\"🔍 Button references found:\")
	print(\"  PlayerTest button: \", playertest_button != null)
	print(\"  PortalTest button: \", portaltest_button != null)
	print(\"  Tutorial button: \", tutorial_button != null)
	print(\"  Level01 button: \", level01_button != null)
	print(\"  Level01Simple button: \", level01simple_button != null)
	print(\"  Level01Test button: \", level01test_button != null)
	print(\"  Back button: \", back_button != null)
	print(\"  Reset button: \", reset_button != null)
	
	# Connect buttons with debug output (only if they exist)
	if playertest_button:
		playertest_button.pressed.connect(func(): 
			print(\"🧪 PlayerTest button pressed\")
			_load_level(\"PlayerTest\")
		)
	if portaltest_button:
		portaltest_button.pressed.connect(func(): 
			print(\"🌀 PortalTest button pressed\")
			_load_level(\"PortalTest\")
		)
	if tutorial_button:
		tutorial_button.pressed.connect(func(): 
			print(\"🎓 Tutorial button pressed\")
			_load_level(\"Tutorial\")
		)
	if level01_button:
		level01_button.pressed.connect(func(): 
			print(\"🌲 Level01 button pressed\")
			_load_level(\"Level01\")
		)
	if level01simple_button:
		level01simple_button.pressed.connect(func(): 
			print(\"🌲 Level01Simple button pressed\")
			_load_level(\"Level01Simple\")
		)
	if level01test_button:
		level01test_button.pressed.connect(func(): 
			print(\"🧪 Level01Test button pressed\")
			_load_level(\"Level01Test\")
		)
	if back_button:
		back_button.pressed.connect(_on_back_pressed)
	if reset_button:
		reset_button.pressed.connect(_on_reset_pressed)
	
	print(\"✅ LevelMap initialized\")

func _load_level(level_name: String):
	print(\"🎯 Loading level: \", level_name)
	
	var scene_path = \"\"
	match level_name:
		\"PlayerTest\":
			scene_path = \"res://levels/PlayerTest.tscn\"
		\"Tutorial\":
			scene_path = \"res://levels/Tutorial.tscn\"
		\"Level01\":
			scene_path = \"res://levels/Level01.tscn\"
		_:
			print(\"❌ Unknown level: \", level_name)
			return
	
	print(\"📁 Loading scene: \", scene_path)
	
	# Check if file exists
	if not FileAccess.file_exists(scene_path):
		print(\"❌ Scene file not found: \", scene_path)
		return
	
	# Load the scene
	var result = get_tree().change_scene_to_file(scene_path)
	if result != OK:
		print(\"❌ Failed to load scene: \", scene_path, \" Error: \", result)
	else:
		print(\"✅ Successfully loading: \", scene_path)

func _on_back_pressed():
	print(\"🏠 Going back to main menu\")
	get_tree().change_scene_to_file(\"res://ui/MainMenu.tscn\")

func _on_reset_pressed():
	print(\"🔄 Resetting progress\")
	# Reset health and respawn systems
	if HealthSystem:
		HealthSystem.reset_health()
	if Respawn:
		Respawn.reset_checkpoints()
	print(\"✅ Progress reset\")
"

[node name="LevelMap" type="CanvasLayer"]
script = SubResource("GDScript_w5xwq")

[node name="Background" type="ColorRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0.1, 0.1, 0.2, 1)

[node name="ScrollContainer" type="ScrollContainer" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 50.0
offset_top = 50.0
offset_right = -50.0
offset_bottom = -50.0

[node name="MapContainer" type="VBoxContainer" parent="ScrollContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Title" type="Label" parent="ScrollContainer/MapContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "🗺️ LEVEL SELECT"
horizontal_alignment = 1

[node name="HSeparator" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="PlayerTestContainer" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="PlayerTestButton" type="Button" parent="ScrollContainer/MapContainer/PlayerTestContainer"]
layout_mode = 2
text = "🧪 PLAYER TEST"

[node name="PlayerTestStats" type="Label" parent="ScrollContainer/MapContainer/PlayerTestContainer"]
layout_mode = 2
text = "Test player movement and controls"
horizontal_alignment = 1

[node name="HSeparator2" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="PortalTestContainer" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="PortalTestButton" type="Button" parent="ScrollContainer/MapContainer/PortalTestContainer"]
layout_mode = 2
text = "🌀 PORTAL TEST"

[node name="PortalTestStats" type="Label" parent="ScrollContainer/MapContainer/PortalTestContainer"]
layout_mode = 2
text = "Test portal completion system"
horizontal_alignment = 1

[node name="HSeparator2b" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="TutorialContainer" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="TutorialButton" type="Button" parent="ScrollContainer/MapContainer/TutorialContainer"]
layout_mode = 2
text = "🎓 TUTORIAL"

[node name="TutorialStats" type="Label" parent="ScrollContainer/MapContainer/TutorialContainer"]
layout_mode = 2
text = "Learn the basics: movement, jumping, hearts, checkpoints"
horizontal_alignment = 1

[node name="HSeparator3" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01Container" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01Button" type="Button" parent="ScrollContainer/MapContainer/Level01Container"]
layout_mode = 2
text = "🌲 LEVEL 1: FOREST ADVENTURE"

[node name="Level01Stats" type="Label" parent="ScrollContainer/MapContainer/Level01Container"]
layout_mode = 2
text = "🌲 Forest Adventure: 5 fruits, 3 gems, enemies, crates, spikes
Complete platforming challenge with all game mechanics!"
horizontal_alignment = 1

[node name="HSeparator4" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01SimpleContainer" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01SimpleButton" type="Button" parent="ScrollContainer/MapContainer/Level01SimpleContainer"]
layout_mode = 2
text = "🌲 LEVEL 1: SIMPLE VERSION"

[node name="Level01SimpleStats" type="Label" parent="ScrollContainer/MapContainer/Level01SimpleContainer"]
layout_mode = 2
text = "Basic version for testing - platforms, checkpoints, portal"
horizontal_alignment = 1

[node name="HSeparator4b" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01TestContainer" type="VBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="Level01TestButton" type="Button" parent="ScrollContainer/MapContainer/Level01TestContainer"]
layout_mode = 2
text = "🧪 LEVEL 1: TEST VERSION"

[node name="Level01TestStats" type="Label" parent="ScrollContainer/MapContainer/Level01TestContainer"]
layout_mode = 2
text = "Minimal test to check if scene loading works"
horizontal_alignment = 1

[node name="HSeparator4c" type="HSeparator" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="ButtonContainer" type="HBoxContainer" parent="ScrollContainer/MapContainer"]
layout_mode = 2

[node name="BackButton" type="Button" parent="ScrollContainer/MapContainer/ButtonContainer"]
layout_mode = 2
size_flags_horizontal = 3
text = "🏠 Main Menu"

[node name="ResetButton" type="Button" parent="ScrollContainer/MapContainer/ButtonContainer"]
layout_mode = 2
size_flags_horizontal = 3
text = "🔄 Reset Progress"
