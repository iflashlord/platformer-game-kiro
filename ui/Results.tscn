[gd_scene load_steps=2 format=3 uid="uid://2k21yj2q13rp"]

[sub_resource type="GDScript" id="GDScript_66hpm"]
script/source = "extends CanvasLayer
class_name Results

@onready var score_value: Label = $ResultsPanel/ScoreSection/ScoreValue
@onready var rank_value: Label = $ResultsPanel/RankSection/RankValue
@onready var relic: Sprite2D = $ResultsPanel/RelicContainer/Relic
@onready var restart_button: Button = $ResultsPanel/ButtonSection/RestartButton
@onready var continue_button: Button = $ResultsPanel/ButtonSection/ContinueButton

# Fruit labels
@onready var apple_label: Label = $ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/AppleCount/AppleLabel
@onready var banana_label: Label = $ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/BananaCount/BananaLabel
@onready var cherry_label: Label = $ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/CherryCount/CherryLabel

# Gem labels
@onready var ruby_label: Label = $ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/RubyCount/RubyLabel
@onready var emerald_label: Label = $ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/EmeraldCount/EmeraldLabel
@onready var diamond_label: Label = $ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/DiamondCount/DiamondLabel

var selected_button_index: int = 0
var menu_buttons: Array[Button] = []

func _ready():
	# Setup button navigation
	menu_buttons = [restart_button, continue_button]
	
	# Connect button signals
	restart_button.pressed.connect(_on_restart_button_pressed)
	continue_button.pressed.connect(_on_continue_button_pressed)
	
	# Pause the game when results are shown
	get_tree().paused = true
	
	# Display results
	display_results()
	
	# Animate the panel
	animate_panel_entrance()
	
	# Start relic animation
	animate_relic()

func _input(event):
	if not visible:
		return
	
	if event.is_action_pressed(\"ui_left\"):
		navigate_menu(-1)
	elif event.is_action_pressed(\"ui_right\"):
		navigate_menu(1)
	elif event.is_action_pressed(\"ui_accept\") or Input.is_action_just_pressed(\"jump\"):
		activate_selected_button()
	elif Input.is_action_just_pressed(\"restart\"):
		_on_restart_button_pressed()
	elif Input.is_action_just_pressed(\"pause\"):
		_on_continue_button_pressed()

func navigate_menu(direction: int):
	selected_button_index = (selected_button_index + direction) % menu_buttons.size()
	if selected_button_index < 0:
		selected_button_index = menu_buttons.size() - 1
	
	update_button_focus()

func update_button_focus():
	for i in range(menu_buttons.size()):
		var button = menu_buttons[i]
		if i == selected_button_index:
			button.grab_focus()
			button.modulate = Color.YELLOW
		else:
			button.modulate = Color.WHITE

func activate_selected_button():
	if selected_button_index < menu_buttons.size():
		menu_buttons[selected_button_index].pressed.emit()

func display_results():
	# Display score
	score_value.text = str(Game.get_score())
	
	# Display fruit counts
	apple_label.text = \"Apples: \" + str(Game.get_fruit_count(0))
	banana_label.text = \"Bananas: \" + str(Game.get_fruit_count(1))
	cherry_label.text = \"Cherries: \" + str(Game.get_fruit_count(2))
	
	# Display gem counts
	ruby_label.text = \"Rubies: \" + str(Game.get_gem_count(0))
	emerald_label.text = \"Emeralds: \" + str(Game.get_gem_count(1))
	diamond_label.text = \"Diamonds: \" + str(Game.get_gem_count(3))
	
	# Display rank
	var rank = Game.get_completion_rank()
	rank_value.text = rank
	
	# Color rank based on performance
	match rank:
		\"S+\", \"S\":
			rank_value.modulate = Color.GOLD
			relic.modulate = Color.GOLD
		\"A\":
			rank_value.modulate = Color.GREEN
			relic.modulate = Color.GREEN
		\"B\":
			rank_value.modulate = Color.BLUE
			relic.modulate = Color.BLUE
		\"C\":
			rank_value.modulate = Color.ORANGE
			relic.modulate = Color.ORANGE
		\"D\":
			rank_value.modulate = Color.RED
			relic.modulate = Color.RED
		\"F\":
			rank_value.modulate = Color.DARK_RED
			relic.modulate = Color.DARK_RED

func animate_panel_entrance():
	var panel = $ResultsPanel
	panel.scale = Vector2.ZERO
	panel.modulate.a = 0.0
	
	var tween = create_tween()
	tween.parallel().tween_property(panel, \"scale\", Vector2.ONE, 0.5)
	tween.parallel().tween_property(panel, \"modulate:a\", 1.0, 0.5)
	tween.tween_callback(animate_rank_reveal)

func animate_rank_reveal():
	# Special animation for rank reveal
	rank_value.scale = Vector2.ZERO
	
	var tween = create_tween()
	tween.tween_property(rank_value, \"scale\", Vector2(1.5, 1.5), 0.3)
	tween.tween_property(rank_value, \"scale\", Vector2.ONE, 0.2)
	
	# Screen flash based on rank
	var rank = Game.get_completion_rank()
	var flash_color = Color.WHITE
	match rank:
		\"S+\", \"S\":
			flash_color = Color.GOLD
		\"A\":
			flash_color = Color.GREEN
		\"B\":
			flash_color = Color.BLUE
	
	FX.flash_screen(flash_color, 0.3)
	
	# Setup button focus
	update_button_focus()

func animate_relic():
	if not relic:
		return
	
	# Floating animation
	var tween = create_tween()
	tween.set_loops(10)
	tween.tween_property(relic, \"position:y\", relic.position.y - 10, 1.5)
	tween.tween_property(relic, \"position:y\", relic.position.y + 10, 1.5)
	
	# Rotation animation
	var rotation_tween = create_tween()
	rotation_tween.set_loops(10)
	rotation_tween.tween_property(relic, \"rotation\", TAU, 4.0)
	
	# Scale pulse animation
	var scale_tween = create_tween()
	scale_tween.set_loops(10)
	scale_tween.tween_property(relic, \"scale\", Vector2(1.1, 1.1), 0.8)
	scale_tween.tween_property(relic, \"scale\", Vector2.ONE, 0.8)

func _on_restart_button_pressed():
	get_tree().paused = false
	Game.restart_game()

func _on_continue_button_pressed():
	get_tree().paused = false
	# Load next level or return to menu
	if LevelLoader.has_next_level():
		LevelLoader.load_next_level()
	else:
		get_tree().change_scene_to_file(\"res://ui/MainMenu.tscn\")

func show_results():
	visible = true
	display_results()
	animate_panel_entrance()
	animate_relic()

func hide_results():
	visible = false
	get_tree().paused = false"

[node name="Results" type="CanvasLayer"]
script = SubResource("GDScript_66hpm")

[node name="Background" type="ColorRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0, 0, 0, 0.8)

[node name="ResultsPanel" type="VBoxContainer" parent="."]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -300.0
offset_top = -250.0
offset_right = 300.0
offset_bottom = 250.0
grow_horizontal = 2
grow_vertical = 2

[node name="Title" type="Label" parent="ResultsPanel"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "LEVEL COMPLETE!"
horizontal_alignment = 1

[node name="HSeparator" type="HSeparator" parent="ResultsPanel"]
layout_mode = 2

[node name="ScoreSection" type="VBoxContainer" parent="ResultsPanel"]
layout_mode = 2

[node name="ScoreTitle" type="Label" parent="ResultsPanel/ScoreSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 20
text = "SCORE"
horizontal_alignment = 1

[node name="ScoreValue" type="Label" parent="ResultsPanel/ScoreSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "0"
horizontal_alignment = 1

[node name="HSeparator2" type="HSeparator" parent="ResultsPanel"]
layout_mode = 2

[node name="CollectiblesSection" type="VBoxContainer" parent="ResultsPanel"]
layout_mode = 2

[node name="CollectiblesTitle" type="Label" parent="ResultsPanel/CollectiblesSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 20
text = "COLLECTIBLES"
horizontal_alignment = 1

[node name="FruitSection" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection"]
layout_mode = 2

[node name="FruitTitle" type="Label" parent="ResultsPanel/CollectiblesSection/FruitSection"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 16
text = "Fruits:"

[node name="FruitBreakdown" type="VBoxContainer" parent="ResultsPanel/CollectiblesSection/FruitSection"]
layout_mode = 2
size_flags_horizontal = 3

[node name="AppleCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown"]
layout_mode = 2

[node name="AppleIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/AppleCount"]
modulate = Color(1, 0, 0, 1)
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="AppleLabel" type="Label" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/AppleCount"]
layout_mode = 2
text = "Apples: 0"

[node name="BananaCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown"]
layout_mode = 2

[node name="BananaIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/BananaCount"]
modulate = Color(1, 1, 0, 1)
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="BananaLabel" type="Label" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/BananaCount"]
layout_mode = 2
text = "Bananas: 0"

[node name="CherryCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown"]
layout_mode = 2

[node name="CherryIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/CherryCount"]
modulate = Color(0.8, 0.2, 0.4, 1)
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="CherryLabel" type="Label" parent="ResultsPanel/CollectiblesSection/FruitSection/FruitBreakdown/CherryCount"]
layout_mode = 2
text = "Cherries: 0"

[node name="GemSection" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection"]
layout_mode = 2

[node name="GemTitle" type="Label" parent="ResultsPanel/CollectiblesSection/GemSection"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 16
text = "Gems:"

[node name="GemBreakdown" type="VBoxContainer" parent="ResultsPanel/CollectiblesSection/GemSection"]
layout_mode = 2
size_flags_horizontal = 3

[node name="RubyCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown"]
layout_mode = 2

[node name="RubyIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/RubyCount"]
modulate = Color(1, 0, 0, 1)
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="RubyLabel" type="Label" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/RubyCount"]
layout_mode = 2
text = "Rubies: 0"

[node name="EmeraldCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown"]
layout_mode = 2

[node name="EmeraldIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/EmeraldCount"]
modulate = Color(0, 1, 0, 1)
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="EmeraldLabel" type="Label" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/EmeraldCount"]
layout_mode = 2
text = "Emeralds: 0"

[node name="DiamondCount" type="HBoxContainer" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown"]
layout_mode = 2

[node name="DiamondIcon" type="Sprite2D" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/DiamondCount"]
position = Vector2(12, 12)
scale = Vector2(12, 12)

[node name="DiamondLabel" type="Label" parent="ResultsPanel/CollectiblesSection/GemSection/GemBreakdown/DiamondCount"]
layout_mode = 2
text = "Diamonds: 0"

[node name="HSeparator3" type="HSeparator" parent="ResultsPanel"]
layout_mode = 2

[node name="RankSection" type="VBoxContainer" parent="ResultsPanel"]
layout_mode = 2

[node name="RankTitle" type="Label" parent="ResultsPanel/RankSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 20
text = "RANK"
horizontal_alignment = 1

[node name="RankValue" type="Label" parent="ResultsPanel/RankSection"]
layout_mode = 2
theme_override_font_sizes/font_size = 48
text = "C"
horizontal_alignment = 1

[node name="HSeparator4" type="HSeparator" parent="ResultsPanel"]
layout_mode = 2

[node name="RelicContainer" type="VBoxContainer" parent="ResultsPanel"]
layout_mode = 2

[node name="RelicTitle" type="Label" parent="ResultsPanel/RelicContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 16
text = "RELIC EARNED"
horizontal_alignment = 1

[node name="Relic" type="Sprite2D" parent="ResultsPanel/RelicContainer"]
modulate = Color(1, 0.8, 0.2, 1)
position = Vector2(300, 50)
scale = Vector2(32, 32)

[node name="HSeparator5" type="HSeparator" parent="ResultsPanel"]
layout_mode = 2

[node name="ButtonSection" type="HBoxContainer" parent="ResultsPanel"]
layout_mode = 2

[node name="RestartButton" type="Button" parent="ResultsPanel/ButtonSection"]
layout_mode = 2
size_flags_horizontal = 3
text = "RESTART"

[node name="ContinueButton" type="Button" parent="ResultsPanel/ButtonSection"]
layout_mode = 2
size_flags_horizontal = 3
text = "CONTINUE"

[connection signal="pressed" from="ResultsPanel/ButtonSection/RestartButton" to="." method="_on_restart_button_pressed"]
[connection signal="pressed" from="ResultsPanel/ButtonSection/ContinueButton" to="." method="_on_continue_button_pressed"]
